{"version":3,"file":"static/js/205.7322ae5c.chunk.js","mappings":"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","sources":["Components/TopNavigation.tsx","Portfolio/Intro/AboutMe.tsx","Portfolio/api/constants.ts","Portfolio/api/modules.ts","Portfolio/api/github-api.ts","Portfolio/Intro/GitInfo/Components/Contribution.tsx","Portfolio/Intro/GitInfo/Components/LanguagesList.tsx","Portfolio/Intro/GitInfo/Components/PinnedRepo.tsx","Portfolio/Intro/GitInfo/GitInfo.tsx","Portfolio/TechStack/TechDescription.tsx","Portfolio/TechStack/TechList.tsx","Portfolio/TechStack/TechStack.tsx","Portfolio/Portfolio.tsx"],"sourcesContent":["import { Box, Button, Tooltip } from '@mui/material';\r\nimport { AiFillCloseCircle as IcoClose } from 'react-icons/ai';\r\nimport { VscChromeMinimize as IcoMinimize } from 'react-icons/vsc';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch } from '../redux/store';\r\nimport { removeTab } from '../redux/tabSlice';\r\nimport { memo } from 'react';\r\n\r\nexport const TOPNAV_HEIGHT = '32px';\r\n\r\ntype NavItemProps = {\r\n  title: string;\r\n  onClick: () => void;\r\n  children?: React.ReactElement;\r\n};\r\n\r\nconst NavItem = ({ children, title, onClick }: NavItemProps) => (\r\n  <Tooltip title={title} describeChild>\r\n    <span>\r\n      <Button onClick={onClick}>{children}</Button>\r\n    </span>\r\n  </Tooltip>\r\n);\r\n\r\nfunction TopNavigation() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  function getTabFromUrl() {\r\n    const href = window.location.href;\r\n    const path = href.slice(href.search('#') + 2);\r\n    return path.charAt(0).toUpperCase() + path.slice(1);\r\n  }\r\n\r\n  const closeTab = () => {\r\n    dispatch(removeTab(getTabFromUrl()));\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"header\"\r\n      sx={{\r\n        height: TOPNAV_HEIGHT,\r\n        position: 'sticky',\r\n        top: 0,\r\n        backgroundColor: 'background.default',\r\n        zIndex: '1',\r\n      }}>\r\n      <Box component=\"nav\" sx={{ display: 'flex', columnGap: '10px', justifyContent: 'flex-end' }}>\r\n        <NavItem title=\"Minimize\" onClick={() => navigate('/')}>\r\n          <IcoMinimize size={20} />\r\n        </NavItem>{' '}\r\n        <NavItem title=\"Close\" onClick={closeTab}>\r\n          <IcoClose size={20} />\r\n        </NavItem>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default memo(TopNavigation);\r\n","import { Box, Typography } from '@mui/material';\r\n\r\nexport default function AboutMe() {\r\n  return (\r\n    <Box\r\n      id=\"About\"\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: { lg: 'column', md: 'row' },\r\n        columnGap: '10%',\r\n        alignItems: 'center',\r\n      }}>\r\n      <Box\r\n        sx={{\r\n          minWidth: { xs: '100px', sm: '200px' },\r\n          minHeight: { xs: '100px', sm: '200px' },\r\n          borderRadius: '50%',\r\n          overflow: 'hidden',\r\n          backgroundImage: 'url(images/avatar.png)',\r\n          backgroundSize: 'cover',\r\n          backgroundPositionY: '5px',\r\n          backgroundPositionX: '6px',\r\n          backgroundRepeat: 'no-repeat',\r\n          border: '1px solid grey',\r\n          display: 'flex',\r\n          alignSelf: 'start',\r\n          mb: '20px',\r\n        }}\r\n      />\r\n      <Typography sx={{ maxWidth: { lg: '300px' } }}>\r\n        Hi, I'm Ivan Kulai - React developer. I'm a self-motivated person who is always eager to\r\n        learn new things and take on new challenges. With my passion for programming, I am\r\n        constantly striving to improve my skills and develop innovative solutions. I am adaptable,\r\n        quick to learn and always looking for opportunities to grow as a developer.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n","/*\r\n this token has permission only for reading\r\n I should do this only beacuse GitHub doesn't allow use Personal Tokens in code and I don't have server to store it\r\n*/\r\nconst TOKEN: string =\r\n  '103 104 112 95 78 76 51 67 105 52 88 56 49 53 55 104 57 97 116 122 112 103 98 48 105 71 108 90 112 48 54 75 54 77 48 74 122 105 114 55';\r\n\r\nexport const HEADERS = {\r\n  'Authorization': `bearer ${String.fromCharCode(...TOKEN.split(' ').map((e) => Number(e)))}`,\r\n};\r\n\r\nexport const QUERY = {\r\n  'query': `query {\r\n        user(login: \"ivan-kulai\") \r\n        {\r\n          repositories(first: 10)\r\n          {\r\n            nodes {name languages(first: 5)  { totalSize nodes {color, name} edges {size} }}\r\n          }\r\n          pinnedItems(first: 1, types: REPOSITORY)\r\n          {\r\n            nodes\r\n            {\r\n              ... on Repository \r\n              {\r\n                url \r\n                name\r\n                languages(first: 5)  { totalSize totalCount nodes {color, name} edges {size} }\r\n              }\r\n            } \r\n          } \r\n          contributionsCollection { totalCommitContributions }\r\n        }\r\n      }`,\r\n};\r\n","import { IRepo, ISortedRepo } from './types';\r\n\r\n// organize fetched data\r\nexport const organizeRepos = (repos: IRepo[]) => {\r\n  return repos.map((repo: IRepo) => {\r\n    const languages = repo.languages.nodes.map((el, idx) => ({\r\n      name: el.name,\r\n      color: el.color,\r\n      size: repo.languages.edges[idx].size,\r\n    }));\r\n\r\n    return { name: repo.name, languages: languages, totalSize: repo.languages.totalSize };\r\n  });\r\n};\r\n\r\n/* \r\n  calculate languages usage in all repositiories by next formula:\r\n  res: language usage in percents\r\n  langSize = total size of one language (all repositorios)\r\n  totalSize = total size of all languages (all repositorios)\r\n  res = langSize / totalSize * 100\r\n*/\r\nexport const getLanguagesUsage = (repos: ISortedRepo[]) => {\r\n  const languages = new Map(); // {name, {size, color}}\r\n  let reposSize = 0;\r\n  // get all languages names\r\n  repos.forEach((repo: ISortedRepo) => {\r\n    reposSize += repo.totalSize; // total size of all repos\r\n    repo.languages.forEach((el) => {\r\n      languages.set(el.name, { color: '', size: 0 });\r\n    });\r\n  });\r\n  // get total size for every language\r\n  repos.forEach((repo: ISortedRepo) => {\r\n    repo.languages.forEach(({ name, size, color }) => {\r\n      languages.set(name, { color, size: size + languages.get(name).size });\r\n    });\r\n  });\r\n  // get language usage in percents\r\n  const langUsageInPercent: { name: string; usage: number; color: string }[] = [];\r\n  languages.forEach(({ size, color }, key) => {\r\n    const usage = (size / reposSize) * 100;\r\n    langUsageInPercent.push({ name: key, usage, color });\r\n  });\r\n\r\n  return langUsageInPercent;\r\n};\r\n","import { HEADERS, QUERY } from './constants';\r\nimport { getLanguagesUsage, organizeRepos } from './modules';\r\n\r\nexport default async function fetchGitHubUser() {\r\n  const response = await fetch('https://api.github.com/graphql', {\r\n    method: 'POST',\r\n    body: JSON.stringify(QUERY),\r\n    headers: HEADERS,\r\n  });\r\n\r\n  const data = await response.json().then((resp) => resp.data.user);\r\n  const pinnedRepo = data.pinnedItems.nodes;\r\n  const totalContribution = data.contributionsCollection.totalCommitContributions;\r\n  const repos = data.repositories.nodes;\r\n\r\n  return {\r\n    pinned: {\r\n      name: pinnedRepo[0].name,\r\n      url: pinnedRepo[0].url,\r\n      languages: getLanguagesUsage(organizeRepos(pinnedRepo)),\r\n    },\r\n    totalContribution,\r\n    languagesUsage: getLanguagesUsage(organizeRepos(repos)),\r\n  };\r\n}\r\n","import { Box } from '@mui/material';\r\n\r\nexport default function Contribution({ contribution }: { contribution: number | undefined }) {\r\n  return (\r\n    <>\r\n      <Box sx={{ m: '20px 0 10px' }}>\r\n        {contribution || '...'}\r\n        {' contributions in the last year'}\r\n      </Box>\r\n      <Box\r\n        component=\"img\"\r\n        src=\"https://ghchart.rshah.org/ivan-kulai\"\r\n        alt=\"Github charts\"\r\n        sx={{\r\n          width: '100%',\r\n          border: '1px solid grey',\r\n          p: '10px 15px',\r\n          borderRadius: '5px',\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { List, ListItem, Typography } from '@mui/material';\r\nimport { BsFillCircleFill as IcoCircle } from 'react-icons/bs';\r\nimport { ILanguagesUsage } from '../../../api/types';\r\n\r\ninterface LanguagesListProps {\r\n  languages: ILanguagesUsage[] | undefined;\r\n  isCaption?: boolean;\r\n}\r\n\r\nexport default function LanguagesList({ languages, isCaption }: LanguagesListProps) {\r\n  return (\r\n    <List sx={{ display: 'flex', columnGap: '20px', flexWrap: 'wrap' }}>\r\n      {languages?.map((el) => (\r\n        <ListItem key={el.name} sx={{ width: { sm: 'auto' } }}>\r\n          <IcoCircle size={10} color={el.color} />\r\n          <Typography component=\"span\" sx={{ ml: '5px' }}>\r\n            {el.name}\r\n          </Typography>\r\n          <Typography\r\n            component=\"span\"\r\n            variant={isCaption ? 'caption' : 'body2'}\r\n            sx={{\r\n              px: '5px',\r\n              color: '#afaeae',\r\n            }}>\r\n            {el.usage.toFixed(1) + '%'}\r\n          </Typography>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import { Box, Link } from '@mui/material';\r\nimport { BiBookBookmark as IcoPinned } from 'react-icons/bi';\r\nimport { IPinned } from '../../../api/types';\r\nimport LanguagesList from './LanguagesList';\r\n\r\nexport default function PinnedRepo({ pinned }: { pinned: IPinned }) {\r\n  const { name, url, languages } = pinned;\r\n  return (\r\n    <>\r\n      <Box sx={{ display: 'flex', columnGap: '10px', alignItems: 'center' }}>\r\n        <IcoPinned />\r\n        <Link\r\n          href={url}\r\n          target=\"_blank\"\r\n          sx={{ color: 'secondary.main', '&:hover': { color: 'secondary.dark' } }}>\r\n          {name}\r\n        </Link>\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            borderRadius: '14px',\r\n            px: '5px',\r\n            fontSize: '13px',\r\n            border: '1px solid #3f3f3f',\r\n            color: '#838383',\r\n          }}>\r\n          Public\r\n        </Box>\r\n      </Box>\r\n      <LanguagesList languages={languages} isCaption />\r\n    </>\r\n  );\r\n}\r\n","import { Box, CircularProgress, List, ListItem, Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport fetchGitHubUser from '../../api/github-api';\r\nimport { IFetchGitHubUserResponce } from '../../api/types';\r\nimport Contribution from './Components/Contribution';\r\nimport LanguagesList from './Components/LanguagesList';\r\nimport PinnedRepo from './Components/PinnedRepo';\r\n\r\nexport default function GitInfo() {\r\n  const [gitData, setGitData] = useState<IFetchGitHubUserResponce | null>(null);\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetchGitHubUser();\r\n        setGitData(response);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Typography component=\"span\" fontSize=\"1.2rem\">\r\n        Pinned\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          rowGap: '10px',\r\n          border: '1px solid grey',\r\n          minWidth: '50%',\r\n          maxWidth: { lg: 'fit-content' },\r\n          p: '10px 15px',\r\n          borderRadius: '5px',\r\n          mt: '10px',\r\n        }}>\r\n        {gitData ? (\r\n          <PinnedRepo pinned={gitData.pinned} />\r\n        ) : (\r\n          <CircularProgress sx={{ alignSelf: 'center' }} />\r\n        )}\r\n      </Box>\r\n      <Contribution contribution={gitData?.totalContribution} />\r\n      <Typography sx={{ m: '20px 0 10px' }}>Languages usage for the whole time</Typography>\r\n      <LanguagesList languages={gitData?.languagesUsage} />\r\n      <List\r\n        sx={{ display: 'flex', width: '100%', height: '7px', borderRadius: '100px', mt: '10px' }}>\r\n        {gitData?.languagesUsage.map((el) => (\r\n          <ListItem key={el.name} sx={{ width: `${el.usage}%`, bgcolor: el.color }} />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import { List, ListItem } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype ListItmProps = {\r\n  children: React.ReactNode;\r\n  title: string;\r\n};\r\n\r\nconst ListItm = ({ children, title }: ListItmProps) => {\r\n  return (\r\n    <ListItem>\r\n      <p>\r\n        <i>\r\n          <u>{title}</u>:{' '}\r\n        </i>\r\n        {children}\r\n      </p>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport function JsStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"Object-oriented programming\">\r\n        understand object-oriented programming concepts. Able to implement them in JavaScript using\r\n        classes and prototypes.\r\n      </ListItm>\r\n      <ListItm title=\"ES6 features\">\r\n        arrow functions, template literals, destructuring, and spread/rest operators.\r\n      </ListItm>\r\n      <ListItm title=\"Asynchronous programming\">\r\n        understand asynchronous programming concepts such as callbacks, promises, and async/await\r\n        and able to apply them in real-world scenarios.\r\n      </ListItm>\r\n      <ListItm title=\"DOM manipulation\">\r\n        understand the Document Object Model (DOM) and able to manipulate it efficiently to create\r\n        dynamic web applications.\r\n      </ListItm>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport function ReactStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"React concepts\">\r\n        understand the core concepts of React such as components, state, props, JSX, and the\r\n        component lifecycle. Understand how to use React to build reusable UI components.\r\n      </ListItm>\r\n      <ListItm title=\"React libraries and tools\">\r\n        using Redux, React Router, and Jest. Understand how to use these tools to build scalable and\r\n        maintainable React applications\r\n      </ListItm>\r\n      <ListItm title=\"Responsive Design\">\r\n        comfortable with responsive design concepts and techniques such as media queries, grid and\r\n        flexbox.\r\n      </ListItm>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport function TypescriptStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"Typescript features\">\r\n        interfaces, types, generics, type inference, namespaces, enumerations\r\n      </ListItm>\r\n      <ListItm title=\"TypeScript ecosystem\">typization of redux</ListItm>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport function ReduxtStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"Redux concepts\">\r\n        understanding actions, reducers, middlewares, stores and how they work together to manage\r\n        application state\r\n      </ListItm>\r\n      <ListItm title=\"Redux Toolkit features\">\r\n        using createSlice, createAsyncThunk, RTKQuerry\r\n      </ListItm>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport function MUIStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"MUI concepts\">\r\n        trying to use the all MUI components with maximum accessibility. Don't put redundant divs\r\n        where it isn't need.\r\n      </ListItm>\r\n      <ListItm title=\"MUI features\">\r\n        understand how to configure custom theme, override styles and access to root styles.\r\n      </ListItm>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport function HtmlCssStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"HTML\">\r\n        periodically read html tags and trying to use most appropriate tags. Trying to follow\r\n        accessibility semantic. Can write simple SVG.\r\n      </ListItm>\r\n      <ListItm title=\"CSS\">\r\n        understand how to use flexbox and grid. Can build responsive via media and interactive\r\n        design via animation (keyframes). Simple animation for SVG.\r\n      </ListItm>\r\n      <ListItm title=\"SCSS preprocessor\">variables, mixins, functions</ListItm>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport function GitStack() {\r\n  return (\r\n    <List>\r\n      <ListItm title=\"Basic Git commands\">\r\n        git init, git add, git commit, git status, git push, and git pull.\r\n      </ListItm>\r\n      <ListItm title=\"Branching and merging\">\r\n        understand how to create and switch between Git branches, merge changes, and resolve merge\r\n        conflicts .\r\n      </ListItm>\r\n      <ListItm title=\"Reverting changes\">\r\n        Understand how to revert changes using reset soft/hard.\r\n      </ListItm>\r\n    </List>\r\n  );\r\n}\r\n","import { Box } from '@mui/material';\r\nimport {\r\n  SiJavascript as IcoJS,\r\n  SiReact as IcoReact,\r\n  SiTypescript as IcoTypescript,\r\n  SiGit as IcoGit,\r\n  SiMaterialui as IcoMUI,\r\n  SiRedux as IcoRedux,\r\n  SiHtml5 as IcoHTML,\r\n  SiCss3 as IcoCss,\r\n} from 'react-icons/si';\r\n\r\nimport {\r\n  GitStack,\r\n  HtmlCssStack,\r\n  JsStack,\r\n  MUIStack,\r\n  ReactStack,\r\n  ReduxtStack,\r\n  TypescriptStack,\r\n} from './TechDescription';\r\n\r\nconst stackList = [\r\n  {\r\n    label: 'JavaScript',\r\n    _icon: <IcoJS size={20} color=\"#efd81d\" />,\r\n    get icon() {\r\n      return this._icon;\r\n    },\r\n    set icon(value) {\r\n      this._icon = value;\r\n    },\r\n    aria: 'JavaScript knowledges',\r\n    text: <JsStack />,\r\n  },\r\n  {\r\n    label: 'React',\r\n    icon: <IcoReact size={20} color=\"#61dafb\" />,\r\n    aria: 'React knowledges',\r\n    text: <ReactStack />,\r\n  },\r\n  {\r\n    label: 'Typescript',\r\n    icon: <IcoTypescript size={20} color=\"#0076c6\" />,\r\n    aria: 'Typescript knowledges',\r\n    text: <TypescriptStack />,\r\n  },\r\n  {\r\n    label: 'Redux',\r\n    icon: <IcoRedux size={20} color=\"#7248b6\" />,\r\n    aria: 'Redux knowledges',\r\n    text: <ReduxtStack />,\r\n  },\r\n  {\r\n    label: 'MUI',\r\n    icon: <IcoMUI size={20} color=\"#007bf7\" />,\r\n    aria: 'MUI knowledges',\r\n    text: <MUIStack />,\r\n  },\r\n  {\r\n    label: 'HTML/CSS',\r\n    icon: (\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <IcoHTML size={20} color=\"#ec7531\" /> <IcoCss size={20} color=\"#254bdd\" />\r\n      </Box>\r\n    ),\r\n    aria: 'HTML/CSS knowledges',\r\n    text: <HtmlCssStack />,\r\n  },\r\n\r\n  {\r\n    label: 'Git',\r\n    icon: <IcoGit size={20} color=\"#e84d31\" />,\r\n    aria: 'Git knowledges',\r\n    text: <GitStack />,\r\n  },\r\n];\r\n\r\nexport default stackList;\r\n","import { Box, Tab, Tabs, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport stackList from './TechList';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  tabIdx: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, tabIdx, index } = props;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: `${tabIdx === index ? 'flex' : 'none'}`,\r\n        mx: 'auto',\r\n        justifyContent: 'center',\r\n        height: '420px',\r\n        overflowY: 'auto',\r\n      }}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Stack() {\r\n  const [tabIdx, setTabIdx] = useState(0);\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabIdx(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h5\" sx={{ textAlign: 'center', mb: '20px' }}>\r\n        Stack\r\n      </Typography>\r\n      <Box component=\"section\" sx={{ display: 'flex', columnGap: '5%' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\r\n          <Tabs\r\n            value={tabIdx}\r\n            onChange={handleChange}\r\n            orientation=\"vertical\"\r\n            textColor=\"secondary\"\r\n            indicatorColor=\"secondary\"\r\n            sx={{ display: 'flex' }}>\r\n            {stackList.map((el) => (\r\n              <Tab\r\n                key={el.label}\r\n                icon={el.icon}\r\n                iconPosition=\"start\"\r\n                label={el.label}\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-start',\r\n                  py: 0,\r\n                  minHeight: '60px',\r\n                }}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </Box>\r\n        {stackList.map((el, idx) => (\r\n          <TabPanel key={el.label} tabIdx={tabIdx} index={idx} aria-label={el.aria}>\r\n            {el.text}\r\n          </TabPanel>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Container, Divider } from '@mui/material';\r\nimport AboutMe from './Intro/AboutMe';\r\nimport GitInfo from './Intro/GitInfo/GitInfo';\r\nimport Stack from './TechStack/TechStack';\r\nimport { TASKBAR_HEIGHT } from '../Root/TaskBar/TaskBar';\r\nimport TopNavigation from '../Components/TopNavigation';\r\n\r\nexport default function Portfolio() {\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: '20px', minHeight: `calc(100vh - ${TASKBAR_HEIGHT})` }}>\r\n      <TopNavigation />\r\n      <Box\r\n        component=\"section\"\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: { lg: 'row', xs: 'column' },\r\n          justifyContent: { lg: 'space-between' },\r\n          mt: '20px',\r\n        }}>\r\n        <AboutMe />\r\n        <GitInfo />\r\n      </Box>\r\n      <Divider sx={{ my: '30px' }} />\r\n      <Stack />\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["TOPNAV_HEIGHT","NavItem","children","title","onClick","describeChild","TopNavigation","navigate","useNavigate","dispatch","useAppDispatch","component","sx","height","position","top","backgroundColor","zIndex","display","columnGap","justifyContent","size","removeTab","href","window","location","path","slice","search","charAt","toUpperCase","getTabFromUrl","memo","AboutMe","Box","id","flexDirection","lg","md","alignItems","minWidth","xs","sm","minHeight","borderRadius","overflow","backgroundImage","backgroundSize","backgroundPositionY","backgroundPositionX","backgroundRepeat","border","alignSelf","mb","Typography","maxWidth","HEADERS","String","fromCharCode","split","map","e","Number","QUERY","organizeRepos","repos","repo","languages","nodes","el","idx","name","color","edges","totalSize","getLanguagesUsage","Map","reposSize","forEach","set","get","langUsageInPercent","key","usage","push","fetchGitHubUser","fetch","method","body","JSON","stringify","headers","response","json","then","resp","data","user","pinnedRepo","pinnedItems","totalContribution","contributionsCollection","totalCommitContributions","repositories","pinned","url","languagesUsage","Contribution","contribution","m","src","alt","width","p","LanguagesList","isCaption","List","flexWrap","ListItem","ml","variant","px","toFixed","PinnedRepo","Link","target","fontSize","GitInfo","useState","gitData","setGitData","useEffect","console","error","rowGap","mt","CircularProgress","bgcolor","ListItm","JsStack","ReactStack","TypescriptStack","ReduxtStack","MUIStack","HtmlCssStack","GitStack","label","_icon","icon","this","value","aria","text","TabPanel","props","tabIdx","index","mx","overflowY","Stack","setTabIdx","textAlign","Tabs","onChange","event","newValue","orientation","textColor","indicatorColor","stackList","Tab","iconPosition","py","Portfolio","Container","TASKBAR_HEIGHT","Divider","my"],"sourceRoot":""}