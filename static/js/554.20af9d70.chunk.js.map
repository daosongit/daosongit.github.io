{"version":3,"file":"static/js/554.20af9d70.chunk.js","mappings":"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","sources":["Components/TopNavigation.tsx","Snake/theme/snakeTheme.ts","Snake/modules/constants.ts","../node_modules/@mui/material/useMediaQuery/useMediaQuery.js","Snake/hooks/useCellSize.ts","Snake/Components/Board.tsx","Snake/Components/Topbar.tsx","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","Snake/Components/GameMenu.tsx","Snake/Components/MobileController.tsx","Snake/modules/checkBorderLine.ts","Snake/modules/getRandomArr.ts","Snake/modules/getMoveDirection.ts","Snake/Snake.tsx","Snake/hooks/useKeyDownHandler.ts","Snake/modules/isSnakeCannibal.ts"],"sourcesContent":["import { Box, Button, Tooltip } from '@mui/material';\r\nimport { AiFillCloseCircle as IcoClose } from 'react-icons/ai';\r\nimport { VscChromeMinimize as IcoMinimize } from 'react-icons/vsc';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch } from '../redux/store';\r\nimport { removeTab } from '../redux/tabSlice';\r\nimport { memo } from 'react';\r\n\r\nexport const TOPNAV_HEIGHT = '32px';\r\n\r\ntype NavItemProps = {\r\n  title: string;\r\n  onClick: () => void;\r\n  children?: React.ReactElement;\r\n};\r\n\r\nconst NavItem = ({ children, title, onClick }: NavItemProps) => (\r\n  <Tooltip title={title} describeChild>\r\n    <span>\r\n      <Button onClick={onClick}>{children}</Button>\r\n    </span>\r\n  </Tooltip>\r\n);\r\n\r\nfunction TopNavigation() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  function getTabFromUrl() {\r\n    const href = window.location.href;\r\n    const path = href.slice(href.search('#') + 2);\r\n    return path.charAt(0).toUpperCase() + path.slice(1);\r\n  }\r\n\r\n  const closeTab = () => {\r\n    dispatch(removeTab(getTabFromUrl()));\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"header\"\r\n      sx={{\r\n        height: TOPNAV_HEIGHT,\r\n        position: 'sticky',\r\n        top: 0,\r\n        backgroundColor: 'background.default',\r\n        zIndex: '1',\r\n      }}>\r\n      <Box component=\"nav\" sx={{ display: 'flex', columnGap: '10px', justifyContent: 'flex-end' }}>\r\n        <NavItem title=\"Minimize\" onClick={() => navigate('/')}>\r\n          <IcoMinimize size={20} />\r\n        </NavItem>{' '}\r\n        <NavItem title=\"Close\" onClick={closeTab}>\r\n          <IcoClose size={20} />\r\n        </NavItem>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default memo(TopNavigation);\r\n","import { createTheme } from '@mui/material';\r\nimport theme from '../../theme/theme';\r\nimport './fonts.css';\r\n\r\nconst snakeTheme = createTheme({\r\n  ...theme,\r\n  typography: {\r\n    fontFamily: `'Press Start 2P', cursive`,\r\n    h1: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        fontSize: '17px',\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: '20px',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '25px',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: '40px',\r\n      },\r\n    },\r\n    caption: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        fontSize: '17px',\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: '20px',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '25px',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: '40px',\r\n      },\r\n    },\r\n    body1: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        fontSize: '12px',\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: '15px',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '19px',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: '27px',\r\n      },\r\n    },\r\n    body2: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        fontSize: '7px',\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        fontSize: '10px',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        fontSize: '14px',\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        fontSize: '20px',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default snakeTheme;\r\n","export const BOARD_SIZE = 10;\r\n\r\nexport const BOARD = Array<number[]>(BOARD_SIZE)\r\n  .fill(Array(BOARD_SIZE))\r\n  .fill(Array(BOARD_SIZE).fill(0));\r\n\r\nexport const SPEED = {\r\n  Easy: 300,\r\n  Normal: 200,\r\n  Hard: 100,\r\n  Insane: 50,\r\n};\r\n\r\nexport const MOVE_DIRECTION = {\r\n  up: 'ArrowUp',\r\n  down: 'ArrowDown',\r\n  right: 'ArrowRight',\r\n  left: 'ArrowLeft',\r\n};\r\n","import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import { useMediaQuery } from '@mui/material';\r\n\r\nconst useCellSize = () => {\r\n  const xl = useMediaQuery('(min-width:1536px)');\r\n  const lg = useMediaQuery('(min-width:1200px)');\r\n  const md = useMediaQuery('(min-width:900px)');\r\n  const sm = useMediaQuery('(min-width:600px)');\r\n\r\n  if (xl) return 70;\r\n  else if (lg) return 40;\r\n  else if (md) return 35;\r\n  else if (sm) return 30;\r\n  else return 25;\r\n};\r\n\r\nexport default useCellSize;\r\n","import { Box } from '@mui/material';\r\nimport { BOARD } from '../modules/constants';\r\nimport useCellSize from '../hooks/useCellSize';\r\n\r\ninterface BoardProps {\r\n  snake: number[][];\r\n  food: number[];\r\n}\r\n\r\nexport default function Board({ snake, food }: BoardProps) {\r\n  const CellSize = useCellSize();\r\n  return (\r\n    <>\r\n      {BOARD.map((row, idxR) => (\r\n        <Box key={idxR} display=\"flex\">\r\n          {row.map((cell, idxC) => {\r\n            const styles = { background: 'transparent', borderRadius: '0' };\r\n            const foodSx = styles;\r\n            const snakeSx = styles;\r\n            const isSnake = snake.find((a) => a[0] === idxR && a[1] === idxC);\r\n            const isFood = food[0] === idxR && food[1] === idxC;\r\n            const isHead =\r\n              snake[snake.length - 1][0] === idxR && snake[snake.length - 1][1] === idxC;\r\n            const isTail = snake[0][0] === idxR && snake[0][1] === idxC;\r\n            if (isHead) {\r\n              snakeSx.background = 'white';\r\n              snakeSx.borderRadius = '30%';\r\n            } else if (isTail) {\r\n              snakeSx.background = '#e0dcdc';\r\n              snakeSx.borderRadius = '10%';\r\n            } else if (isSnake) {\r\n              snakeSx.background = 'white';\r\n              snakeSx.borderRadius = '10%';\r\n            }\r\n            if (isFood) {\r\n              foodSx.borderRadius = '30%';\r\n              snakeSx.background = 'green';\r\n            }\r\n            return (\r\n              <Box\r\n                key={idxC}\r\n                sx={{\r\n                  ...foodSx,\r\n                  ...snakeSx,\r\n                  display: 'flex',\r\n                  width: CellSize,\r\n                  height: CellSize,\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { Box, Button, Typography } from '@mui/material';\r\nimport { BOARD_SIZE } from '../modules/constants';\r\nimport useCellSize from '../hooks/useCellSize';\r\nimport { memo } from 'react';\r\n\r\ninterface TopbarProps {\r\n  score: number;\r\n  isGameStarted: boolean;\r\n  startGame: (isStarted: boolean) => void;\r\n}\r\n\r\nfunction Topbar({ score, isGameStarted, startGame }: TopbarProps) {\r\n  const width = BOARD_SIZE * useCellSize();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: width,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n      }}>\r\n      <Typography component=\"span\" variant=\"body1\">\r\n        {score}\r\n      </Typography>\r\n      <Button\r\n        onClick={() => startGame(false)}\r\n        sx={{ visibility: `${isGameStarted ? 'visible' : 'hidden'}`, borderRadius: '5px' }}>\r\n        <Typography component=\"span\" variant=\"body1\">\r\n          PAUSE\r\n        </Typography>\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default memo(Topbar);\r\n","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n  return value === candidate;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      exclusive = false,\n      fullWidth = false,\n      onChange,\n      orientation = 'horizontal',\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  };\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;","import { Box, Button, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { BOARD_SIZE, SPEED } from '../modules/constants';\r\nimport useCellSize from '../hooks/useCellSize';\r\nimport { useAppSelector } from '../../redux/store';\r\n\r\ninterface GameMenuProps {\r\n  score: number;\r\n  speed: number;\r\n  startGame: () => void;\r\n  changeSpeed: (s: number) => void;\r\n}\r\n\r\nexport default function GameMenu({ score, startGame, changeSpeed, speed }: GameMenuProps) {\r\n  const bestScore = useAppSelector((state) => state.bestScore.bestScore);\r\n  const [speedValue, setSpeedValue] = useState(speed);\r\n  function handleClick(e: React.MouseEvent<HTMLElement>, speed: string) {\r\n    setSpeedValue(Number(speed));\r\n    changeSpeed(Number(speed));\r\n  }\r\n  const boxSize = BOARD_SIZE * useCellSize();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: boxSize,\r\n        height: boxSize,\r\n        p: '10px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n      }}>\r\n      <Typography component=\"h1\" variant=\"h1\" sx={{ textAlign: 'center', mb: '30px' }}>\r\n        Menu\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          flexDirection: 'column',\r\n          rowGap: '10px',\r\n        }}>\r\n        <Typography component=\"span\" variant=\"body1\">\r\n          Best score: {bestScore}\r\n        </Typography>\r\n        <Button onClick={startGame} sx={{ my: '20px' }}>\r\n          <Typography component=\"span\" variant=\"caption\" color=\"secondary\">\r\n            {score ? 'Resume' : 'New Game'}\r\n          </Typography>\r\n        </Button>\r\n        <Typography component=\"span\" variant=\"body1\">\r\n          Speed\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"secondary\"\r\n          value={speedValue}\r\n          exclusive\r\n          onChange={handleClick}\r\n          aria-label=\"Speed\"\r\n          sx={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\r\n          <ToggleButton value={SPEED.Easy} sx={{ color: '#dddbdb' }}>\r\n            <Typography variant=\"body2\">Easy</Typography>\r\n          </ToggleButton>\r\n          <ToggleButton value={SPEED.Normal} sx={{ color: '#dddbdb' }}>\r\n            <Typography variant=\"body2\">Normal</Typography>\r\n          </ToggleButton>\r\n          <ToggleButton value={SPEED.Hard} sx={{ color: '#dddbdb' }}>\r\n            <Typography variant=\"body2\">Hard</Typography>\r\n          </ToggleButton>\r\n          <ToggleButton value={SPEED.Insane} sx={{ color: '#dddbdb' }}>\r\n            <Typography variant=\"body2\">Insane</Typography>\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, styled } from '@mui/material';\r\nimport { memo } from 'react';\r\nimport {\r\n  BsArrowDownSquare as IcoDown,\r\n  BsArrowLeftSquare as IcoLeft,\r\n  BsArrowRightSquare as IcoRight,\r\n  BsArrowUpSquare as IcoUp,\r\n} from 'react-icons/bs';\r\nimport { MOVE_DIRECTION } from '../modules/constants';\r\n\r\ninterface MobileControllerProps {\r\n  changeDirection: (d: string) => void;\r\n}\r\n\r\nconst ButtonSx = styled(Button)({\r\n  p: 0,\r\n  minWidth: 0,\r\n});\r\n\r\nfunction MobileController({ changeDirection }: MobileControllerProps) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: { xs: 'flex', md: 'none' },\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        mt: '40px',\r\n      }}>\r\n      <ButtonSx onClick={() => changeDirection(MOVE_DIRECTION.up)}>\r\n        <IcoUp size={35} />\r\n      </ButtonSx>\r\n      <Box sx={{ display: 'flex', columnGap: '30px' }}>\r\n        <ButtonSx onClick={() => changeDirection(MOVE_DIRECTION.left)}>\r\n          <IcoLeft size={35} />\r\n        </ButtonSx>\r\n        <ButtonSx onClick={() => changeDirection(MOVE_DIRECTION.right)}>\r\n          <IcoRight size={35} />\r\n        </ButtonSx>\r\n      </Box>\r\n      <ButtonSx onClick={() => changeDirection(MOVE_DIRECTION.down)}>\r\n        <IcoDown size={35} />\r\n      </ButtonSx>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default memo(MobileController);\r\n","import { BOARD_SIZE } from './constants';\r\n\r\nexport default function checkBorderLine(position: number) {\r\n  switch (true) {\r\n    case position >= BOARD_SIZE:\r\n      return 0;\r\n    case position < 0:\r\n      return BOARD_SIZE - 1;\r\n    default:\r\n      return position;\r\n  }\r\n}\r\n","export default function getRandomArr() {\r\n  return [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];\r\n}\r\n","import { MOVE_DIRECTION } from './constants';\r\n\r\nconst moveDirection = (direction: string) => {\r\n  let move = [] as number[];\r\n  switch (direction) {\r\n    case MOVE_DIRECTION.up:\r\n      move = [-1, 0];\r\n      break;\r\n    case MOVE_DIRECTION.down:\r\n      move = [1, 0];\r\n      break;\r\n    case MOVE_DIRECTION.right:\r\n      move = [0, 1];\r\n      break;\r\n    case MOVE_DIRECTION.left:\r\n      move = [0, -1];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return move;\r\n};\r\n\r\nexport default moveDirection;\r\n","//styles\r\nimport snakeTheme from './theme/snakeTheme';\r\n// constants\r\nimport { TASKBAR_HEIGHT } from '../Root/TaskBar/TaskBar';\r\nimport { MOVE_DIRECTION, SPEED } from './modules/constants';\r\n//mui\r\nimport { Box, ThemeProvider } from '@mui/material';\r\n// react\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../redux/store';\r\nimport { setBestScore } from '../redux/bestScoreSlice';\r\n//components\r\nimport Board from './Components/Board';\r\nimport Topbar from './Components/Topbar';\r\nimport GameMenu from './Components/GameMenu';\r\nimport TopNavigation, { TOPNAV_HEIGHT } from '../Components/TopNavigation';\r\nimport MobileController from './Components/MobileController';\r\n//modules\r\nimport checkBorderLine from './modules/checkBorderLine';\r\nimport getRandomArr from './modules/getRandomArr';\r\nimport getMoveDirection from './modules/getMoveDirection';\r\nimport isSnakeCannibal from './modules/isSnakeCannibal';\r\nimport useKeyDownHandler from './hooks/useKeyDownHandler';\r\n\r\nexport default function Snake() {\r\n  const [snake, setSnake] = useState([getRandomArr()]);\r\n  const [food, setFood] = useState([1, 1]);\r\n  const prevDirection = useRef<string>(MOVE_DIRECTION.right);\r\n  const [direction, setDirection] = useState<string>(MOVE_DIRECTION.right);\r\n  const [isGameStarted, setGameStarted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [snakeSpeed, setSnakeSpeed] = useState(SPEED.Normal);\r\n  const dispatch = useAppDispatch();\r\n  const bestScore = useAppSelector((state) => state.bestScore.bestScore);\r\n\r\n  const startGame = useCallback((isStarted = true) => setGameStarted(isStarted), []);\r\n  const changeSpeed = useCallback((speed: number) => setSnakeSpeed(speed), []);\r\n  const changeDirection = useCallback((direction: string) => setDirection(direction), []);\r\n\r\n  useKeyDownHandler({ direction, changeDirection });\r\n\r\n  useEffect(() => {\r\n    if (!isGameStarted) return;\r\n    let speed = snakeSpeed;\r\n    // change direction without timeout\r\n    if (prevDirection.current !== direction) {\r\n      speed = 0;\r\n      prevDirection.current = direction;\r\n    }\r\n    const timerID = gameLoop(speed);\r\n    return () => clearTimeout(timerID);\r\n  }, [snake, direction, isGameStarted]);\r\n\r\n  function gameLoop(speed: number) {\r\n    const timerId = setTimeout(() => {\r\n      const newSnake = snake;\r\n      const move = getMoveDirection(direction);\r\n      const head = [\r\n        checkBorderLine(newSnake[snake.length - 1][0] + move[0]),\r\n        checkBorderLine(newSnake[snake.length - 1][1] + move[1]),\r\n      ];\r\n\r\n      newSnake.push(head);\r\n\r\n      if (isSnakeCannibal(snake)) {\r\n        setSnake([getRandomArr()]);\r\n        setGameStarted(false);\r\n        if (bestScore < score) {\r\n          dispatch(setBestScore(score));\r\n        }\r\n        setScore(0);\r\n        return;\r\n      }\r\n\r\n      let sliceIndex = 1;\r\n      if (head[0] === food[0] && head[1] === food[1]) {\r\n        setFood(getRandomArr());\r\n        setScore((prev) => prev + 1);\r\n        sliceIndex = 0;\r\n      }\r\n\r\n      setSnake(newSnake.slice(sliceIndex));\r\n    }, speed);\r\n    return timerId;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={snakeTheme}>\r\n      <TopNavigation />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '100%',\r\n          height: `calc(100vh - ${TASKBAR_HEIGHT} - ${TOPNAV_HEIGHT})`,\r\n          background:\r\n            'linear-gradient(186deg, rgba(35,48,48,1) 0%, rgba(41,40,40,1) 49%, #323328 100%)',\r\n        }}>\r\n        <Topbar score={score} isGameStarted={isGameStarted} startGame={startGame} />\r\n        <Box\r\n          sx={{\r\n            border: '1px solid white',\r\n            borderRadius: '5px',\r\n            boxShadow: '0px 0px 83px -25px #666565',\r\n          }}>\r\n          {isGameStarted ? (\r\n            <Board snake={snake} food={food} />\r\n          ) : (\r\n            <GameMenu\r\n              score={score}\r\n              speed={snakeSpeed}\r\n              startGame={startGame}\r\n              changeSpeed={changeSpeed}\r\n            />\r\n          )}\r\n        </Box>\r\n        <MobileController changeDirection={changeDirection} />\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { Theme, useMediaQuery } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { MOVE_DIRECTION } from '../modules/constants';\r\n\r\ninterface KeyDownHandlerProps {\r\n  direction: string;\r\n  changeDirection: (d: string) => void;\r\n}\r\n\r\nexport default function useKeyDownHandler({ direction, changeDirection }: KeyDownHandlerProps) {\r\n  const MD_DISPLAY = useMediaQuery((theme: Theme) => theme.breakpoints.up('md'));\r\n\r\n  useEffect(() => {\r\n    if (!MD_DISPLAY) return;\r\n    const keyDownHandler = (e: KeyboardEvent) => {\r\n      if (Object.values(MOVE_DIRECTION).includes(e.key)) {\r\n        changeDirection(e.key);\r\n      }\r\n    };\r\n    document.addEventListener('keydown', keyDownHandler);\r\n    return () => document.removeEventListener('keydown', keyDownHandler);\r\n  }, [direction, MD_DISPLAY, changeDirection]);\r\n}\r\n","export default function isSnakeCannibal(snake: number[][]) {\r\n  if (snake.length) {\r\n    // find arrays with same first value\r\n    const buff = [...snake.filter((a) => a[0] === snake[snake.length - 1][0])];\r\n    if (buff.length) {\r\n      // find dublicates\r\n      const buff2 = buff.filter((a) => a[1] === snake[snake.length - 1][1]);\r\n      // if snake has two same arrays then it is eaten yourself\r\n      return buff2.length > 1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"names":["TOPNAV_HEIGHT","NavItem","children","title","onClick","describeChild","TopNavigation","navigate","useNavigate","dispatch","useAppDispatch","component","sx","height","position","top","backgroundColor","zIndex","display","columnGap","justifyContent","size","removeTab","href","window","location","path","slice","search","charAt","toUpperCase","getTabFromUrl","memo","createTheme","theme","typography","fontFamily","h1","fontSize","caption","body1","body2","BOARD_SIZE","BOARD","Array","fill","SPEED","Easy","Normal","Hard","Insane","MOVE_DIRECTION","up","down","right","left","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","React","matches","match","setMatch","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","mediaQueryList","notify","getSnapshot","subscribe","useMediaQuery","queryInput","options","useTheme","supportMatchMedia","getThemeProps","name","props","replace","undefined","xl","lg","md","sm","Board","snake","food","CellSize","useCellSize","map","row","idxR","Box","cell","idxC","styles","background","borderRadius","foodSx","snakeSx","isSnake","find","a","isFood","isHead","length","isTail","width","Topbar","score","isGameStarted","startGame","alignItems","Typography","variant","Button","visibility","isValueSelected","value","candidate","isArray","indexOf","getToggleButtonGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ToggleButtonGroupRoot","styled","overridesResolver","ownerState","toggleButtonGroupClasses","grouped","capitalize","orientation","root","vertical","fullWidth","_extends","vars","shape","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","inProps","ref","useThemeProps","className","color","disabled","exclusive","onChange","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","handleChange","event","buttonValue","newValue","index","splice","concat","handleExclusiveChange","_jsx","role","clsx","child","selected","getToggleButtonUtilityClass","ToggleButtonRoot","ButtonBase","selectedColorChannel","selectedColor","palette","text","primary","main","primaryChannel","mainChannel","button","padding","border","divider","action","toggleButtonClasses","disabledBackground","textDecoration","hoverOpacity","alpha","selectedOpacity","pxToRem","disableFocusRipple","focusRipple","defaultPrevented","GameMenu","changeSpeed","speed","bestScore","useAppSelector","state","useState","speedValue","setSpeedValue","boxSize","p","textAlign","mb","rowGap","my","e","Number","ButtonSx","minWidth","MobileController","changeDirection","xs","mt","checkBorderLine","getRandomArr","Math","floor","random","direction","move","Snake","setSnake","setFood","prevDirection","useRef","setDirection","setGameStarted","setScore","snakeSpeed","setSnakeSpeed","useCallback","MD_DISPLAY","breakpoints","useEffect","keyDownHandler","Object","values","includes","key","document","addEventListener","removeEventListener","useKeyDownHandler","current","timerID","timerId","setTimeout","newSnake","getMoveDirection","head","push","buff","filter","isSnakeCannibal","setBestScore","sliceIndex","prev","gameLoop","clearTimeout","ThemeProvider","snakeTheme","TASKBAR_HEIGHT","boxShadow"],"sourceRoot":""}